{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/product.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction ProductItemComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"mat-card\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelement(3, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card\");\n    i0.ɵɵelementStart(5, \"div\", 5);\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 7);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 7);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"form\", 8);\n    i0.ɵɵlistener(\"ngSubmit\", function ProductItemComponent_div_0_Template_form_ngSubmit_12_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onSubmit(ctx_r1.product, $event);\n    });\n    i0.ɵɵelementStart(13, \"mat-form-field\", 9);\n    i0.ɵɵelementStart(14, \"select\", 10);\n    i0.ɵɵelementStart(15, \"option\", 11);\n    i0.ɵɵtext(16, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"option\", 12);\n    i0.ɵɵtext(18, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"option\", 13);\n    i0.ɵɵtext(20, \"3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"option\", 14);\n    i0.ɵɵtext(22, \"4\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"option\", 15);\n    i0.ɵɵtext(24, \"5\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 16);\n    i0.ɵɵelementStart(26, \"button\", 17);\n    i0.ɵɵtext(27, \"Add to cart\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 7);\n    i0.ɵɵelementStart(29, \"a\", 18);\n    i0.ɵɵtext(30, \" \\u27FA Back to products \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r0.product.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.product.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$ \", ctx_r0.product.price, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.product.description);\n  }\n}\n\nexport let ProductItemComponent = /*#__PURE__*/(() => {\n  class ProductItemComponent {\n    constructor(route, productService) {\n      this.route = route;\n      this.productService = productService;\n      this.id = null;\n      this.products = [];\n      this.product = null;\n    }\n\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        this.id = Number(params.get('id'));\n      });\n      this.productService.getProduct().subscribe(res => {\n        this.products = res;\n        this.product = this.getProductById(this.id);\n        console.log(this.product);\n      });\n    }\n\n    getProductById(id) {\n      return this.products.filter(product => product.id === id)[0];\n    }\n\n    onSubmit(cartProduct, e) {\n      let newCartProduct = [];\n      let message = '';\n      let CartExist = false;\n      const selectedOption = e.target[0].options[e.target[0].options.selectedIndex].value;\n      const cartProducts = this.productService.getCartProduct();\n      const cartIdx = cartProducts.findIndex(cart => cart.id === cartProduct.id);\n      newCartProduct = cartProducts;\n\n      if (cartIdx === -1 || cartProducts.length === 0) {\n        newCartProduct.push(Object.assign(cartProduct, {\n          option: selectedOption\n        }));\n        message = `New Item '${cartProduct.name}' added to cart`;\n      } else {\n        const option = newCartProduct[cartIdx].option;\n        CartExist = selectedOption === option;\n\n        if (CartExist) {\n          message = `${option} Item(s) of '${cartProduct.name}' existing in cart.`;\n        } else {\n          newCartProduct[cartIdx].id = cartProduct.id;\n          newCartProduct[cartIdx].option = selectedOption;\n          message = `${option} Item(s) of '${cartProduct.name}' existing in cart. Will be updated to ${selectedOption}`;\n        }\n      }\n\n      !CartExist ? this.productService.addToCart(newCartProduct) : null;\n      alert(message);\n      return false;\n    }\n\n  }\n\n  ProductItemComponent.ɵfac = function ProductItemComponent_Factory(t) {\n    return new (t || ProductItemComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProductService));\n  };\n\n  ProductItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductItemComponent,\n    selectors: [[\"app-product-item\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"detail-container\", \"fxLayout\", \"row wrap\", \"fxLayoutGap.gt-md\", \"40px\", \"fxLayoutAlign\", \"center center\", 4, \"ngIf\"], [\"fxLayout\", \"row wrap\", \"fxLayoutGap.gt-md\", \"40px\", \"fxLayoutAlign\", \"center center\", 1, \"detail-container\"], [1, \"cart-item-details\"], [1, \"cart-item\"], [1, \"product-image\", 3, \"src\"], [1, \"detail-item\"], [1, \"product-item-detail\", \"product-title\"], [1, \"product-item-detail\"], [\"action\", \"\", 3, \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"product-item-detail\"], [\"matNativeControl\", \"\", \"required\", \"\"], [\"selected\", \"\", \"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"value\", \"4\"], [\"value\", \"5\"], [1, \"product-button\"], [\"mat-button\", \"\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"product-item-detail\"], [\"routerLink\", \"/\"]],\n    template: function ProductItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ProductItemComponent_div_0_Template, 31, 4, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.product);\n      }\n    },\n    directives: [i3.NgIf, i4.DefaultLayoutDirective, i4.DefaultLayoutGapDirective, i4.DefaultLayoutAlignDirective, i5.MatCard, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, i7.MatFormField, i8.MatInput, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i9.MatButton, i1.RouterLinkWithHref],\n    styles: [\"img[_ngcontent-%COMP%]{border-radius:10px;width:320px}.select-input[_ngcontent-%COMP%]{width:108px;margin-bottom:8px}.detail-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;margin-top:64px}.detail-item[_ngcontent-%COMP%]{margin-left:128px;margin-right:128px}.product-title[_ngcontent-%COMP%]{font-size:30px!important}.back-link[_ngcontent-%COMP%]{margin-top:8px}\"]\n  });\n  return ProductItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}